---
// @/components/common/ContactForm.astro
import Button from "@/components/common/Button.astro";
---

<form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="form"
  class="needs-validation bg-background text-foreground p-4 rounded-lg shadow"
  data-astro-reload
  novalidate
>
  <input
    type="hidden"
    name="access_key"
    value="66533e85-623c-46be-a009-2080fcd83a6d"
  />

  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />

  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border placeholder:text-placeholder rounded-md outline-none focus:ring-2 focus:ring-focus border-slate-300 focus:border-focus ring-slate-100"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-error text-sm mt-1 hidden">
      Please provide your full name.
    </div>
  </div>

  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label>
    <input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border placeholder:text-placeholder rounded-md outline-none focus:ring-2 focus:ring-focus border-slate-300 focus:border-focus ring-slate-100"
    />
    <div class="empty-feedback text-error text-sm mt-1 hidden">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-error text-sm mt-1 hidden">
      Please provide a valid email address.
    </div>
  </div>

  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message"
      class="w-full px-4 py-3 border placeholder:text-placeholder rounded-md outline-none h-36 focus:ring-2 focus:ring-focus border-slate-300 focus:border-focus ring-slate-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-error text-sm mt-1 hidden">
      Please enter your message.
    </div>
  </div>

  <Button type="submit" size="lg">Send Message</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none; /* Keep this to hide feedback by default */
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block; /* Show empty feedback when placeholder is shown and invalid */
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block; /* Show invalid feedback when input is not placeholder shown and invalid */
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: theme(
      "colors.error.DEFAULT"
    ); /* Use Tailwind theme color for invalid border */
  }
</style>

<script is:inline>
  document.addEventListener(
    "DOMContentLoaded",
    () => {
      const form = document.getElementById("form");
      const result = document.getElementById("result");

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        form.classList.add("was-validated");
        if (!form.checkValidity()) {
          form.querySelectorAll(":invalid")[0].focus();
          return;
        }
        const formData = new FormData(form);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        result.innerHTML = "Sending...";

        fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        })
          .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
              result.classList.remove("text-error");
              result.classList.add("text-success");
              result.innerHTML = json.message;
            } else {
              console.log(response);
              result.classList.remove("text-success");
              result.classList.add("text-error");
              result.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            result.classList.remove("text-success");
            result.classList.add("text-error");
            result.innerHTML = "Something went wrong!";
          })
          .then(function () {
            form.reset();
            form.classList.remove("was-validated");
            setTimeout(() => {
              result.style.display = "none";
            }, 5000);
          });
      });
    },
    { once: true }
  );
</script>
